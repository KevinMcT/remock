apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

group = 'no.saua.remock'
sourceCompatibility = 1.7
targetCompatibility = 1.7
version = '0.2.0'

repositories {
    mavenCentral()
}

ext {
    springVersion = '4.1.5.RELEASE'
    spring3Version = '3.2.13.RELEASE'
}

configurations {
    spring3testCompile.extendsFrom testCompile
}

configurations.spring3testCompile.resolutionStrategy {
    eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'org.springframework') {
            details.useVersion spring3Version
        }
    }
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'javax.inject:javax.inject:1'
    compile 'org.mockito:mockito-core:1.10.19'
    compile 'org.springframework:spring-test:' + springVersion
    compile 'org.springframework:spring-context:' + springVersion

    testCompile 'junit:junit:4.11'

    // Logging
    testCompile 'org.apache.logging.log4j:log4j-api:2.1'
    testCompile 'org.apache.logging.log4j:log4j-core:2.1'
    testCompile 'org.apache.logging.log4j:log4j-slf4j-impl:2.1'
    testCompile 'org.slf4j:jcl-over-slf4j:1.7.10'

}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task spring3test(type: Test) {
    dependsOn testClasses
    classpath = configurations.spring3testCompile
    classpath += sourceSets.main.output
    classpath += sourceSets.test.output
    include "no/saua/remock/Spring3test.class"
}
test.dependsOn spring3test

artifacts {
    archives javadocJar, sourcesJar
}

// Only configure uploadArchives if username/password is set.
if (project.hasProperty("sonatypeUsername")) {
    signing {
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }

                pom.project {
                    name 'Remock'
                    packaging 'jar'
                    description 'Remock is a library for mocking up Spring beans with Mockito'
                    url 'http://github.com/ksaua/remock'

                    scm {
                        url 'scm:git@github.com:ksaua/remock.git'
                        connection 'scm:git@github.com:ksaua/remock.git'
                        developerConnection 'scm:git@github.com:ksaua/remock.git'
                    }

                    licenses {
                        license {
                            name 'The MIT License'
                            url 'http://opensource.org/licenses/MIT'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'ksaua'
                            name 'Knut Saua Mathiesen'
                        }
                    }
                }
            }
        }
    }
}

